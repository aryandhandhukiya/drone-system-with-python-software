{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sih Drone\\\\drone\\\\client\\\\src\\\\pages\\\\Emergency.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport dronImage from '../asset/medicineDeliveryDrone.png';\nimport { MDBBtn, MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardImage, MDBInput, MDBIcon, MDBCheckbox } from 'mdb-react-ui-kit';\nimport { Button } from 'react-bootstrap';\nimport { Context } from '../context/Context';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Emergency = () => {\n  _s();\n  const {\n    sendEmergencyAlert,\n    alertError\n  } = useContext(Context);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [number, setNumber] = useState('');\n  const [location, setLocation] = useState();\n  const [useMyLocation, setUseMyLocation] = useState(false);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [response, setResponse] = useState(null);\n  const nav = useNavigate();\n  const handleRegister = async () => {\n    // Validate all fields are filled\n    if (!name || !number || !useMyLocation && !location) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n\n    // Basic email validation\n\n    // Basic number validation (you can customize this based on your requirements)\n    const numberRegex = /^\\d+$/;\n    if (!numberRegex.test(number)) {\n      alert('Please enter a valid phone number.');\n      return;\n    }\n    try {\n      let userLocation = null;\n      if (useMyLocation && navigator.geolocation) {\n        // Use the user's current location\n        const position = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(resolve, reject);\n        });\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n        userLocation = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        setLocation(userLocation);\n      } else if (!useMyLocation) {\n        // Use Nominatim for geocoding without an API key\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data.length > 0) {\n            setLatitude(parseFloat(data[0].lat));\n            setLongitude(parseFloat(data[0].lon));\n            userLocation = {\n              latitude: parseFloat(data[0].lat),\n              longitude: parseFloat(data[0].lon)\n            };\n            setLocation(userLocation);\n          } else {\n            console.error('Location not found.');\n            return;\n          }\n        } else {\n          console.error('Geocoding failed');\n          return;\n        }\n      }\n\n      // After authentication and location determination, send data to the server or perform further actions\n      const alertData = {\n        name,\n        email,\n        number,\n        useMyLocation,\n        location: userLocation\n      };\n\n      // Call the sendEmergencyAlert function with the alertData, latitude, and longitude\n      const response = await sendEmergencyAlert(alertData);\n      console.log(response);\n      if (response !== null && response !== void 0 && response.error) {\n        alert(response.error);\n      } else if (response !== null && response !== void 0 && response.message) {\n        alert(response.message);\n      }\n      //  nav('/')\n\n      // Optionally, you can reset the form fields after successful submission\n      setName('');\n      setEmail('');\n      setNumber('');\n      setLocation('');\n      setUseMyLocation(false);\n      setLatitude(null);\n      setLongitude(null);\n    } catch (error) {\n      console.error('Error during registration:', error.message);\n      alert('An error occurred during registration.');\n    }\n  };\n  if (alertError) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"Something went wrong try again later\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(MDBCard, {\n      className: \"text-black m-5\",\n      style: {\n        borderRadius: '25px'\n      },\n      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        children: /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"10\",\n            lg: \"6\",\n            className: \"order-2 order-lg-1 d-flex flex-column align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\",\n              style: {\n                color: '#ff5555'\n              },\n              children: \"Emergency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row align-items-center mb-4 \",\n              children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                fas: true,\n                icon: \"user me-3\",\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                label: \"Name\",\n                id: \"form1\",\n                type: \"text\",\n                className: \"w-100\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row align-items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                fas: true,\n                icon: \"lock me-3\",\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                label: \" Adhar number\",\n                id: \"form3\",\n                type: \"text\",\n                value: number,\n                onChange: e => setNumber(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), useMyLocation ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row align-items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                fas: true,\n                icon: \"key me-3\",\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                label: \"Location\",\n                id: \"form4\",\n                type: \"text\",\n                value: location,\n                onChange: e => setLocation(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(MDBCheckbox, {\n                name: \"useMyLocation\",\n                value: \"\",\n                id: \"useMyLocationCheckbox\",\n                label: \"My Location\",\n                checked: useMyLocation,\n                onChange: () => setUseMyLocation(!useMyLocation)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleRegister,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"10\",\n            lg: \"6\",\n            className: \"order-1 order-lg-2 d-flex align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(MDBCardImage, {\n              src: dronImage,\n              fluid: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Emergency, \"Q7SPXHUmznsLoWhyX/Xr5ERXW2U=\", false, function () {\n  return [useNavigate];\n});\n_c = Emergency;\nexport default Emergency;\nvar _c;\n$RefreshReg$(_c, \"Emergency\");","map":{"version":3,"names":["React","useContext","useState","dronImage","MDBBtn","MDBContainer","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBCardImage","MDBInput","MDBIcon","MDBCheckbox","Button","Context","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Emergency","_s","sendEmergencyAlert","alertError","name","setName","email","setEmail","number","setNumber","location","setLocation","useMyLocation","setUseMyLocation","latitude","setLatitude","longitude","setLongitude","response","setResponse","nav","handleRegister","alert","numberRegex","test","userLocation","navigator","geolocation","position","Promise","resolve","reject","getCurrentPosition","coords","fetch","encodeURIComponent","ok","data","json","length","parseFloat","lat","lon","console","error","alertData","log","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","fluid","style","borderRadius","md","lg","color","fas","icon","size","label","id","type","value","onChange","e","target","checked","variant","onClick","src","_c","$RefreshReg$"],"sources":["D:/Sih Drone/drone/client/src/pages/Emergency.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport dronImage from '../asset/medicineDeliveryDrone.png'\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardImage,\r\n  MDBInput,\r\n  MDBIcon,\r\n  MDBCheckbox\r\n} from 'mdb-react-ui-kit';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Context } from '../context/Context';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Emergency = () => {\r\n  const { sendEmergencyAlert, alertError } = useContext(Context);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [location, setLocation] = useState();\r\n  const [useMyLocation, setUseMyLocation] = useState(false);\r\n  const [latitude, setLatitude] = useState(null);\r\n  const [longitude, setLongitude] = useState(null);\r\n  const [response, setResponse] = useState(null)\r\n  const nav = useNavigate()\r\n  const handleRegister = async () => {\r\n    // Validate all fields are filled\r\n    if (!name || !number || (!useMyLocation && !location)) {\r\n      alert('Please fill in all required fields.');\r\n      return;\r\n    }\r\n\r\n    // Basic email validation\r\n\r\n    // Basic number validation (you can customize this based on your requirements)\r\n    const numberRegex = /^\\d+$/;\r\n    if (!numberRegex.test(number)) {\r\n      alert('Please enter a valid phone number.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let userLocation = null;\r\n\r\n      if (useMyLocation && navigator.geolocation) {\r\n        // Use the user's current location\r\n        const position = await new Promise((resolve, reject) => {\r\n          navigator.geolocation.getCurrentPosition(resolve, reject);\r\n        });\r\n\r\n        setLatitude(position.coords.latitude);\r\n        setLongitude(position.coords.longitude);\r\n\r\n        userLocation = {\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude\r\n        };\r\n\r\n        setLocation(userLocation);\r\n      }\r\n      else if (!useMyLocation) {\r\n        // Use Nominatim for geocoding without an API key\r\n        const response = await fetch(\r\n          `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}`\r\n        );\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n\r\n          if (data.length > 0) {\r\n            setLatitude(parseFloat(data[0].lat));\r\n            setLongitude(parseFloat(data[0].lon));\r\n            userLocation = {\r\n              latitude: parseFloat(data[0].lat),\r\n              longitude: parseFloat(data[0].lon)\r\n            };\r\n\r\n            setLocation(userLocation);\r\n          } else {\r\n            console.error('Location not found.');\r\n            return;\r\n          }\r\n        } else {\r\n          console.error('Geocoding failed');\r\n          return;\r\n        }\r\n      }\r\n\r\n      // After authentication and location determination, send data to the server or perform further actions\r\n      const alertData = {\r\n        name,\r\n        email,\r\n        number,\r\n        useMyLocation,\r\n        location: userLocation,\r\n      };\r\n\r\n      // Call the sendEmergencyAlert function with the alertData, latitude, and longitude\r\n      const response = await sendEmergencyAlert(alertData)\r\n      console.log(response);\r\n      if (response?.error) {\r\n        alert(response.error)\r\n      }\r\n      else if (response?.message) {\r\n        alert(response.message)\r\n      }\r\n      //  nav('/')\r\n\r\n      // Optionally, you can reset the form fields after successful submission\r\n      setName('');\r\n      setEmail('');\r\n      setNumber('');\r\n      setLocation('');\r\n      setUseMyLocation(false);\r\n      setLatitude(null);\r\n      setLongitude(null);\r\n    }\r\n    catch (error) {\r\n      console.error('Error during registration:', error.message);\r\n      alert('An error occurred during registration.');\r\n    }\r\n  };\r\n\r\n\r\n  if (alertError) {\r\n\r\n    return <> <div className='error'>Something went wrong try again later</div></>\r\n  }\r\n  return (\r\n    <MDBContainer fluid>\r\n      <MDBCard className='text-black m-5' style={{ borderRadius: '25px' }}>\r\n        <MDBCardBody>\r\n          <MDBRow>\r\n            <MDBCol md='10' lg='6' className='order-2 order-lg-1 d-flex flex-column align-items-center'>\r\n              <p className=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\" style={{ color: '#ff5555' }}>Emergency</p>\r\n\r\n              <div className=\"d-flex flex-row align-items-center mb-4 \">\r\n                <MDBIcon fas icon=\"user me-3\" size='lg' />\r\n                <MDBInput\r\n                  label='Name'\r\n                  id='form1'\r\n                  type='text'\r\n                  className='w-100'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n{/* \r\n              <div className=\"d-flex flex-row align-items-center mb-4\">\r\n                <MDBIcon fas icon=\"envelope me-3\" size='lg' />\r\n                <MDBInput\r\n                  label='Email'\r\n                  id='form2'\r\n                  type='email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div> */}\r\n\r\n              <div className=\"d-flex flex-row align-items-center mb-4\">\r\n                <MDBIcon fas icon=\"lock me-3\" size='lg' />\r\n                <MDBInput\r\n                  label=' Adhar number'\r\n                  id='form3'\r\n                  type='text'\r\n                  value={number}\r\n                  onChange={(e) => setNumber(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              {useMyLocation ? null : (\r\n                <div className=\"d-flex flex-row align-items-center mb-4\">\r\n                  <MDBIcon fas icon=\"key me-3\" size='lg' />\r\n                  <MDBInput\r\n                    label='Location'\r\n                    id='form4'\r\n                    type='text'\r\n                    value={location}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <div className='mb-4'>\r\n                <MDBCheckbox\r\n                  name='useMyLocation'\r\n                  value=''\r\n                  id='useMyLocationCheckbox'\r\n                  label='My Location'\r\n                  checked={useMyLocation}\r\n                  onChange={() => setUseMyLocation(!useMyLocation)}\r\n                />\r\n              </div>\r\n\r\n              <Button variant=\"primary\" onClick={handleRegister}>Submit</Button>\r\n            </MDBCol>\r\n            {/* {response && <h3>Check mail verification</h3>} */}\r\n            <MDBCol md='10' lg='6' className='order-1 order-lg-2 d-flex align-items-center'>\r\n              <MDBCardImage src={dronImage} fluid />\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default Emergency;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}