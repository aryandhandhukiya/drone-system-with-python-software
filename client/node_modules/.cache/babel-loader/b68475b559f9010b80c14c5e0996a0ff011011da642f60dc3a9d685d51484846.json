{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sih Drone\\\\drone\\\\client\\\\src\\\\context\\\\Context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useCallback, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { baseUrl, postReq, socketUrl } from '../utils/services';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\n\n// ContextProvider\n// ContextProvider\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n  const [socket, setSocket] = useState();\n  const [socketConnecting, setSocketConnecting] = useState(true); // Renamed to `socketConnecting`\n  const [emergencyData, setEmergencyData] = useState();\n  const [alertError, setAlertError] = useState();\n  useEffect(() => {\n    try {\n      const newSocket = io(\"http://localhost:5000\");\n      newSocket.on(\"connect\", () => {\n        console.log(\"Socket connected\");\n        setSocketConnecting(false);\n      });\n      newSocket.on(\"disconnect\", () => {});\n      setSocket(newSocket);\n      return () => {\n        newSocket.disconnect();\n      };\n    } catch (error) {\n      console.log(\"Error connecting to socket:\", error);\n    }\n  }, []);\n  const notifyAlert = useCallback(emergencyData => {\n    if (socket) {\n      try {\n        console.log(emergencyData);\n        socket.emit(\"alertFromClient\", emergencyData);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      console.log(\"Socket not found\");\n    }\n  });\n  const sendEmergencyAlert = useCallback(async emergencyData => {\n    try {\n      const response = await postReq(`${baseUrl}/api/disaster/emergency`, emergencyData);\n      setSocketConnecting(false); // Update the connection state\n\n      if (response.data.error) {\n        console.log(response.data.error);\n        return setAlertError(response.data.error);\n      }\n      setEmergencyData(emergencyData);\n      return response.data;\n    } catch (error) {\n      setAlertError(error);\n      console.error(error);\n    }\n  }, [socket]); // Make sure to include socket as a dependency\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      sendEmergencyAlert,\n      socket,\n      socketConnecting,\n      // Updated name\n      alertError,\n      notifyAlert\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(ContextProvider, \"hThgL6BfD3sKzkDmxVJsrxH/G/8=\");\n_c = ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useCallback","useEffect","useState","io","baseUrl","postReq","socketUrl","axios","jsxDEV","_jsxDEV","Context","ContextProvider","children","_s","socket","setSocket","socketConnecting","setSocketConnecting","emergencyData","setEmergencyData","alertError","setAlertError","newSocket","on","console","log","disconnect","error","notifyAlert","emit","sendEmergencyAlert","response","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sih Drone/drone/client/src/context/Context.js"],"sourcesContent":["import { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { io } from 'socket.io-client'\r\nimport { baseUrl, postReq, socketUrl } from '../utils/services'\r\nimport axios from 'axios'\r\nexport const Context = createContext()\r\n\r\n// ContextProvider\r\n// ContextProvider\r\nexport const ContextProvider = ({ children }) => {\r\n    const [socket, setSocket] = useState();\r\n    const [socketConnecting, setSocketConnecting] = useState(true); // Renamed to `socketConnecting`\r\n    const [emergencyData, setEmergencyData] = useState();\r\n    const [alertError, setAlertError] = useState();\r\n    \r\n    useEffect(() => {\r\n        try {\r\n            const newSocket = io(\"http://localhost:5000\");\r\n\r\n            newSocket.on(\"connect\", () => {\r\n                console.log(\"Socket connected\");\r\n                setSocketConnecting(false);\r\n            });\r\n            newSocket.on(\"disconnect\", () => {\r\n            });\r\n\r\n            setSocket(newSocket);\r\n\r\n            return () => {\r\n                newSocket.disconnect();\r\n            };\r\n        } catch (error) {\r\n            console.log(\"Error connecting to socket:\", error);\r\n        }\r\n    }, []);\r\n\r\n    const notifyAlert = useCallback((emergencyData) => {\r\n        if (socket) {\r\n            try {\r\n                console.log(emergencyData);\r\n                socket.emit(\"alertFromClient\", emergencyData);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        } else {\r\n            console.log(\"Socket not found\");\r\n        }\r\n    });\r\n\r\n    const sendEmergencyAlert = useCallback(async (emergencyData) => {\r\n        try {\r\n            const response = await postReq(`${baseUrl}/api/disaster/emergency`, emergencyData);\r\n\r\n            setSocketConnecting(false); // Update the connection state\r\n\r\n            if (response.data.error) {\r\n                console.log(response.data.error);\r\n                return setAlertError(response.data.error);\r\n            }\r\n\r\n            setEmergencyData(emergencyData);\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            setAlertError(error);\r\n            console.error(error);\r\n        }\r\n    }, [socket]); // Make sure to include socket as a dependency\r\n\r\n    return (\r\n        <Context.Provider\r\n            value={{\r\n                sendEmergencyAlert,\r\n                socket,\r\n                socketConnecting, // Updated name\r\n                alertError,\r\n                notifyAlert,\r\n            }}\r\n        >\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}